join ProC1.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC1.GeneDistFrag
join ProC2.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC2.GeneDistFrag
join ProC3.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC3.GeneDistFrag
join ProC4.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC4.GeneDistFrag
join ProC5.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC5.GeneDistFrag
join ProC6.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC6.GeneDistFrag
join ProC7.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC7.GeneDistFrag
join ProC8.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC8.GeneDistFrag
join ProC9.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProC9.GeneDistFrag




join ProR1.MappedReadInfo.ReadCountNormalizedByRL ProR1Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProR1.GeneDistFrag
join ProR2.MappedReadInfo.ReadCountNormalizedByRL ProR2Aligned.out.bam.featureCounts.Unique.Sorted.ReadAssignmentToGene | awk '{if(frag_dist[$6]==""){frag_dist[$6]=$2}else{frag_dist[$6]=frag_dist[$6]","$2}} END {for(i in frag_dist){print i, frag_dist[i]}}' | sort -k1,1 > ProR2.GeneDistFrag
